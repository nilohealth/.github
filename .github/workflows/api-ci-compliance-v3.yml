name: Github CI

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      python_version:
        required: false
        type: string
        default: '3.12'
    secrets:
      gcp_artifact_password:
        required: true
      cc_test_reporter_id:
        required: true


jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python ${{ inputs.python_version }}
        run: uv python install ${{ inputs.python_version }}

      - name: Install gettext for translations
        run: |
          sudo apt-get update
          sudo apt-get install gettext

      - name: Install dependencies
        run: make dependencies
        env:
          UV_INDEX_NILO_PYPI_PASSWORD: ${{ secrets.GCP_ARTIFACT_PASSWORD }}

      - name: Lint with pylint
        run: make lint

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python ${{ inputs.python_version }}
        run: uv python install ${{ inputs.python_version }}

      - name: Install gettext for translations
        run: |
          sudo apt-get update
          sudo apt-get install gettext

      - name: Install dependencies
        run: make dependencies
        env:
          UV_INDEX_NILO_PYPI_PASSWORD: ${{ secrets.GCP_ARTIFACT_PASSWORD }}

      - name: Lint with pylint
        run: make check

  unit:
    runs-on:
      labels: '16-core-runner'
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ${{inputs.app_name}}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python ${{ inputs.python_version }}
        run: uv python install ${{ inputs.python_version }}

      - name: Install gettext for translations
        run: |
          sudo apt-get update
          sudo apt-get install gettext

      - name: Install dependencies
        run: make dependencies
        env:
          UV_INDEX_NILO_PYPI_PASSWORD: ${{ secrets.GCP_ARTIFACT_PASSWORD }}

      - name: Installing locale
        run: |
          sudo locale-gen pt_BR.UTF-8
          sudo update-locale LANG=pt_BR.UTF-8

      - name: Unit test
        run: |
          make unit
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/${{inputs.app_name}}
          LOG_LEVEL: ERROR

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: poetry run coverage xml
          debug: true
